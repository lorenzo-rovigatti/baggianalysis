name: Build wheels

on:
  # Trigger on pushes to the mainline branches and version tags. This prevents building commits
  # twice when the pull request source branch is in the same repository.
  push:
    branches:
      - main
    tags:
      - "v*"

  # trigger on pull requests to main
  pull_request:
    branches:
      - main

  # trigger on request
  workflow_dispatch:

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check README rendering for PyPI
        run: pipx run twine check --strict dist/*

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  build_wheels:
    name: Build wheel for ${{ matrix.os }}, Python ${{ matrix.python-version[1] }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        if: runner.os == 'Windows'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_ENVIRONMENT: 

          # Manually select the python version
          CIBW_PROJECT_REQUIRES_PYTHON: "==${{ matrix.python-version }}.*"
          CIBW_SKIP: "{pp*,*-musllinux_*}"

          # Build only for 64-bit platforms
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_WINDOWS: auto64

          # Configure environment variables
          MACOSX_DEPLOYMENT_TARGET: "10.9"

          # verbosity
          CIBW_BUILD_VERBOSITY: 1

          # Test the wheels
          #CIBW_TEST_REQUIRES: "pytest pytest-regtest"
          #CIBW_TEST_COMMAND: "pytest -v {project}/tests"
          #CIBW_TEST_SKIP: 

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl


  upload_pypi:
    name: Publish [PyPI]
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_type == 'tag'
    environment:
        name: pypi
        url: https://pypi.org/p/baggianalysis
    permissions:
        id-token: write

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Check files
        run: ls -lR dist

      - name: Upload release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
